definitions:
  handlers.CreateAdminRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - email
    - name
    type: object
  handlers.CreateClientApplicationRequest:
    properties:
      address:
        type: string
      city:
        type: string
      contact_email:
        type: string
      contact_name:
        type: string
      contact_phone_number:
        type: string
      country:
        type: string
      date_of_birth:
        type: string
      description:
        type: string
      id_document_url:
        type: string
      id_expiry:
        type: string
      id_number:
        type: string
      id_type:
        enum:
        - DRIVERS_LICENSE
        - PASSPORT
        - NATIONAL_ID
        type: string
      latitude:
        type: number
      logo_url:
        type: string
      longitude:
        type: number
      name:
        type: string
      region:
        type: string
      registration_number:
        type: string
      sub_type:
        description: INDIVIDUAL = LANDLORD; COMPANY = PROPERTY_MANAGER | DEVELOPER
          | AGENCY
        enum:
        - LANDLORD
        - PROPERTY_MANAGER
        - DEVELOPER
        - AGENCY
        type: string
      support_email:
        type: string
      support_phone:
        type: string
      type:
        description: INDIVIDUAL | COMPANY
        enum:
        - INDIVIDUAL
        - COMPANY
        type: string
      website_url:
        type: string
    required:
    - address
    - city
    - contact_email
    - contact_name
    - contact_phone_number
    - country
    - latitude
    - longitude
    - name
    - region
    - sub_type
    - type
    type: object
  handlers.CreateClientUserRequest:
    properties:
      email:
        example: client-user@example.com
        type: string
      name:
        example: John Doe
        minLength: 2
        type: string
      phone:
        example: "+233281234569"
        type: string
      role:
        enum:
        - ADMIN
        - STAFF
        example: ADMIN
        type: string
    required:
    - email
    - name
    - phone
    - role
    type: object
  handlers.CreateDocumentRequest:
    properties:
      content:
        type: string
      property_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      size:
        example: 2048
        type: integer
      tags:
        example:
        - LEASE_AGREEMENT
        - INSPECTION_REPORT
        items:
          type: string
        type: array
      title:
        example: Lease Agreement
        type: string
    required:
    - content
    - size
    - title
    type: object
  handlers.CreatePropertyRequest:
    properties:
      address:
        example: 12 Labone Crescent
        maxLength: 200
        minLength: 5
        type: string
      city:
        example: Accra
        maxLength: 100
        minLength: 2
        type: string
      country:
        example: Ghana
        maxLength: 100
        minLength: 2
        type: string
      description:
        example: A luxurious apartment overlooking the Atlantic Ocean.
        type: string
      gpsAddress:
        example: GA-123-4567
        type: string
      images:
        example:
        - https://example.com/images/1.jpg
        items:
          type: string
        type: array
      latitude:
        example: 5.6037
        type: number
      longitude:
        example: -0.187
        type: number
      name:
        example: Oceanview Apartment
        maxLength: 100
        minLength: 3
        type: string
      region:
        example: Greater Accra
        maxLength: 100
        minLength: 2
        type: string
      status:
        enum:
        - Property.Status.Active
        - Property.Status.Maintenance
        - Property.Status.Inactive
        example: Property.Status.Active
        type: string
      tags:
        example:
        - beachfront
        - furnished
        items:
          type: string
        type: array
      type:
        enum:
        - SINGLE
        - MULTI
        example: SINGLE
        type: string
    required:
    - address
    - city
    - country
    - latitude
    - longitude
    - name
    - region
    - status
    - type
    type: object
  handlers.LoginClientUserRequest:
    properties:
      email:
        example: client-user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  handlers.LoginRequest:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: strongpassword123
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  handlers.RejectClientApplicationRequest:
    properties:
      reason:
        type: string
    required:
    - reason
    type: object
  handlers.ResetPasswordRequest:
    properties:
      newPassword:
        example: newpassword123
        minLength: 6
        type: string
    required:
    - newPassword
    type: object
  handlers.SendForgotPasswordResetLinkRequest:
    properties:
      email:
        example: client-user@example.com
        type: string
    required:
    - email
    type: object
  handlers.UpdateDocumentRequest:
    properties:
      content:
        type: string
      property_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      size:
        example: 3072
        minimum: 1
        type: integer
      tags:
        example:
        - '["lease"'
        - '"updated"]'
        items:
          type: string
        type: array
      title:
        example: Updated Lease Agreement
        type: string
    required:
    - tags
    type: object
  lib.HTTPError:
    properties:
      errors:
        properties:
          message:
            type: string
        type: object
    type: object
  lib.HTTPReturnPaginatedMetaResponse:
    properties:
      has_next_page:
        example: true
        type: boolean
      has_previous_page:
        example: false
        type: boolean
      order:
        example: desc
        type: string
      order_by:
        example: created_at
        type: string
      page:
        example: 1
        type: integer
      page_size:
        example: 20
        type: integer
      total:
        example: 100
        type: integer
    type: object
  transformations.OutputAdmin:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: admin@example.com
        type: string
      id:
        example: 4fce5dc8-8114-4ab2-a94b-b4536c27f43b
        type: string
      name:
        example: Admin Name
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  transformations.OutputAdminWithToken:
    properties:
      admin:
        $ref: '#/definitions/transformations.OutputAdmin'
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw
        type: string
    type: object
  transformations.OutputClientApplication:
    properties:
      address:
        description: company address or individual home address
        example: 21st Neon Street
        type: string
      approved_by_id:
        example: S90092
        type: string
      city:
        example: Accra
        type: string
      contact_email:
        example: contact@email.com
        type: string
      contact_name:
        example: John Doe
        type: string
      contact_phone_number:
        example: "01234567890"
        type: string
      country:
        example: Ghana
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      date_of_birth:
        description: individual specific fields
        example: "2025-01-31"
        type: string
      description:
        example: Taking you to the next level!
        type: string
      id:
        example: 4fce5dc8-8114-4ab2-a94b-b4536c27f43b
        type: string
      id_document_url:
        example: www.id-doc-url.com/id.pdf
        type: string
      id_expiry:
        example: "2040-12-31"
        type: string
      id_number:
        example: GHA-123-456-7890
        type: string
      id_type:
        example: GHANACARD
        type: string
      latitude:
        example: 5.6037
        type: number
      logo_url:
        example: www.logo-url.com/logo.png
        type: string
      longitude:
        example: -0.187
        type: number
      name:
        example: Company Name
        type: string
      region:
        example: Greater Accra
        type: string
      registration_number:
        description: company specific fields
        example: GR1234567890
        type: string
      rejected_because:
        example: No reason
        type: string
      rejected_by:
        $ref: '#/definitions/transformations.OutputAdmin'
      rejected_by_id:
        example: R234110
        type: string
      status:
        example: ClientApplication.Status.Approved
        type: string
      sub_type:
        example: ESTATE MANAGER
        type: string
      support_email:
        example: support@email.com
        type: string
      support_phone:
        example: +233 (0)12 345 6789
        type: string
      type:
        example: COMPANY
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      website_url:
        example: www.company-url.com
        type: string
    type: object
  transformations.OutputClientUser:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: client-user@example.com
        type: string
      id:
        example: 4fce5dc8-8114-4ab2-a94b-b4536c27f43b
        type: string
      name:
        example: Client User Name
        type: string
      phone_number:
        example: "+233281234569"
        type: string
      role:
        example: STAFF
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  transformations.OutputClientUserWithToken:
    properties:
      client_user:
        $ref: '#/definitions/transformations.OutputClientUser'
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw
        type: string
    type: object
  transformations.OutputDocument:
    properties:
      content:
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      created_by:
        $ref: '#/definitions/transformations.OutputClientUser'
      created_by_id:
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        type: string
      id:
        example: 4fce5dc8-8114-4ab2-a94b-b4536c27f43b
        type: string
      property:
        $ref: '#/definitions/transformations.OutputProperty'
      property_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      size:
        example: 2048
        type: integer
      tags:
        example:
        - LEASE_AGREEMENT
        - INSPECTION_REPORT
        items:
          type: string
        type: array
      title:
        example: Lease Agreement
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      updated_by:
        $ref: '#/definitions/transformations.OutputClientUser'
      updated_by_id:
        example: c290f1ee-6c54-4b01-90e6-d701748f0852
        type: string
    type: object
  transformations.OutputProperty:
    properties:
      address:
        example: 123 Main St
        type: string
      city:
        example: Accra
        type: string
      country:
        example: Ghana
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        format: date-time
        type: string
      description:
        example: Very elegant place
        type: string
      gps_address:
        example: GH-1234-5678
        type: string
      id:
        example: 4fce5dc8-8114-4ab2-a94b-b4536c27f43b
        format: uuid
        type: string
      images:
        example:
        - http://www.images/hih.jpg
        items:
          type: string
        type: array
      latitude:
        example: 5.6037
        type: number
      longitude:
        example: -0.187
        type: number
      name:
        example: My Property
        type: string
      region:
        example: Greater Accra
        type: string
      status:
        example: Property.Status.Active
        type: string
      tags:
        example:
        - apartment
        - downtown
        items:
          type: string
        type: array
      type:
        example: SINGLE
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        format: date-time
        type: string
    type: object
info:
  contact:
    email: domeybenjamin1@gmail.com
    name: Domey Benjamin
    url: https://www.linkedin.com/in/benjamin-armah-kesey-domey/
  description: This is the RentLoop API documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://rentloop.com/terms
  title: RentLoop API
  version: "1.0"
paths:
  /api/v1/admins:
    get:
      consumes:
      - application/json
      description: Get all admins
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                properties:
                  meta:
                    $ref: '#/definitions/lib.HTTPReturnPaginatedMetaResponse'
                  rows:
                    items:
                      $ref: '#/definitions/transformations.OutputAdmin'
                    type: array
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all admins
      tags:
      - Admins
    post:
      consumes:
      - application/json
      description: Create a new admin
      parameters:
      - description: Admin details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAdminRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputAdmin'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new admin
      tags:
      - Admins
  /api/v1/admins/{admin_id}:
    get:
      consumes:
      - application/json
      description: Get admin by ID
      parameters:
      - description: Admin ID
        in: path
        name: admin_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputAdmin'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get admin by ID
      tags:
      - Admins
  /api/v1/admins/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin and return token
      parameters:
      - description: Login credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputAdminWithToken'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Authenticate admin and return token
      tags:
      - Admins
  /api/v1/admins/me:
    get:
      consumes:
      - application/json
      description: Get the currently authenticated admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputAdmin'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get the currently authenticated admin
      tags:
      - Admins
  /api/v1/client-applications:
    get:
      consumes:
      - application/json
      description: Get all ClientApplications
      parameters:
      - enum:
        - ClientApplication.Status.Pending
        - ClientApplication.Status.Approved
        - ClientApplication.Status.Rejected
        in: query
        name: status
        type: string
      - enum:
        - LANDLORD
        - PROPERTY_MANAGER
        - DEVELOPER
        - AGENCY
        in: query
        name: sub_type
        type: string
      - enum:
        - INDIVIDUAL
        - COMPANY
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                properties:
                  meta:
                    $ref: '#/definitions/lib.HTTPReturnPaginatedMetaResponse'
                  rows:
                    items:
                      $ref: '#/definitions/transformations.OutputClientApplication'
                    type: array
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all ClientApplications
      tags:
      - ClientApplications
  /api/v1/client-applications/{application_id}:
    get:
      consumes:
      - application/json
      description: Get clientApplication by ID
      parameters:
      - description: ClientApplication ID
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientApplication'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get clientApplication by ID
      tags:
      - ClientApplications
  /api/v1/client-applications/{application_id}/approve:
    patch:
      consumes:
      - application/json
      description: Admin approves a client's application after review
      parameters:
      - description: Client Application ID
        in: path
        name: application_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientApplication'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      security:
      - BearerAuth: []
      summary: Approve a client application
      tags:
      - ClientApplications
  /api/v1/client-applications/{application_id}/reject:
    patch:
      consumes:
      - application/json
      description: Admin rejects a client application with a reason
      parameters:
      - description: Client Application ID
        in: path
        name: application_id
        required: true
        type: string
      - description: Rejection reason
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.RejectClientApplicationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientApplication'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      security:
      - BearerAuth: []
      summary: Reject a client application
      tags:
      - ClientApplications
  /api/v1/client-users:
    post:
      consumes:
      - application/json
      description: Create a new client user
      parameters:
      - description: Create Client User Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateClientUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Client user created successfully
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientUser'
            type: object
        "400":
          description: Error occurred when creating a client user
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Invalid or absent authentication token
          schema:
            type: string
        "500":
          description: An unexpected error occurred
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Creates new client user
      tags:
      - ClientUsers
  /api/v1/client-users/forgot-password:
    post:
      consumes:
      - application/json
      description: Sends forgot password reset link to client user
      parameters:
      - description: Send Forgot Password Reset Link Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.SendForgotPasswordResetLinkRequest'
      responses:
        "204":
          description: Forgot password reset link sent successfully
        "400":
          description: Error occurred when sending forgot password reset link to client
            user
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: An unexpected error occurred
          schema:
            type: string
      summary: Sends forgot password reset link to client user
      tags:
      - ClientUsers
  /api/v1/client-users/login:
    post:
      consumes:
      - application/json
      description: Authenticate client user and returns client user and token
      parameters:
      - description: Client user login credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginClientUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Client user authenticated successfully
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientUserWithToken'
            type: object
        "400":
          description: Error occurred when authenticating a client user
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: An unexpected error occurred
          schema:
            type: string
      summary: Authenticates client user and returns token
      tags:
      - ClientUsers
  /api/v1/client-users/me:
    get:
      consumes:
      - application/json
      description: Get the currently authenticated client user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientUser'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get the currently authenticated client user
      tags:
      - ClientUsers
  /api/v1/client-users/reset-password:
    post:
      consumes:
      - application/json
      description: Resets the password for a client user
      parameters:
      - description: Reset Password Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.ResetPasswordRequest'
      responses:
        "204":
          description: Password reset successfully
        "400":
          description: Error occurred when resetting password for client user
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: An unexpected error occurred
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Resets the password for a client user
      tags:
      - ClientUsers
  /api/v1/clients/apply:
    post:
      consumes:
      - application/json
      description: Create a new client application
      parameters:
      - description: Client Application details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateClientApplicationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputClientApplication'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new client application
      tags:
      - ClientApplications
  /api/v1/documents:
    get:
      consumes:
      - application/json
      description: Get all documents
      parameters:
      - example: 550e8400-e29b-41d4-a716-446655440000
        in: query
        name: propertyID
        type: string
      - collectionFormat: csv
        example:
        - LEASE_AGREEMENT
        - INSPECTION_REPORT
        in: query
        items:
          type: string
        name: tags
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                properties:
                  meta:
                    $ref: '#/definitions/lib.HTTPReturnPaginatedMetaResponse'
                  rows:
                    items:
                      $ref: '#/definitions/transformations.OutputDocument'
                    type: array
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all documents
      tags:
      - Documents
    post:
      consumes:
      - application/json
      description: Create a new document
      parameters:
      - description: Document details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateDocumentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Document created successfully
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputDocument'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new document
      tags:
      - Documents
  /api/v1/documents/{document_id}:
    delete:
      consumes:
      - application/json
      description: Delete a document
      parameters:
      - description: Document ID
        in: path
        name: document_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete a document
      tags:
      - Documents
    get:
      consumes:
      - application/json
      description: Get document by ID
      parameters:
      - description: Document ID
        in: path
        name: document_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputDocument'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get document by ID
      tags:
      - Documents
    patch:
      consumes:
      - application/json
      description: Update an existing document
      parameters:
      - description: Document ID
        format: uuid4
        in: path
        name: document_id
        required: true
        type: string
      - description: Document details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Document Updated successfully
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputDocument'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update an existing document
      tags:
      - Documents
  /api/v1/properties:
    post:
      consumes:
      - application/json
      description: Create a new property
      parameters:
      - description: Create Property Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreatePropertyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Property created successfully
          schema:
            properties:
              data:
                $ref: '#/definitions/transformations.OutputProperty'
            type: object
        "400":
          description: Error occurred when creating a property
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "401":
          description: Invalid or absent authentication token
          schema:
            type: string
        "500":
          description: An unexpected error occurred
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Creates a new property
      tags:
      - Properties
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
