# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/
name: Deploy API Staging

on:
  push:
    paths:
        - 'services/main/**'
    branches:
      - main

jobs:
  sync-db:
    name: 🗄️ Synchronize Database
    runs-on: ubuntu-latest
    concurrency: db-sync-group
    if: ${{ contains(join(github.event.commits.*.modified, ' '), 'services/main/init/') || contains(join(github.event.commits.*.added, ' '), 'services/main/init/') || contains(join(github.event.commits.*.removed, ' '), 'services/main/init/') }}


    defaults:
      run:
        working-directory: services/main

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🧰 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: services/main/go.mod
          cache: true

      - name: 📦 Download dependencies
        run: go mod download

      - name: 🗄️ Run database sync
        env:
          DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          DB_USER: ${{ secrets.STAGING_DB_USER }}
          DB_PASS: ${{ secrets.STAGING_DB_PASS }}
          DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          DB_DEFAULT_DBNAME: ${{ secrets.STAGING_DB_DEFAULT_DBNAME }}
          DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          DB_SSLMODE: ${{ secrets.STAGING_DB_SSLMODE }}
        run: make update-db

  deploy:
      name: ⚙️ Build And Deploy Staging
      runs-on: ubuntu-latest
      concurrency: deploy-group
      needs: sync-db # ⬅️ Wait until the DB sync job finishes successfully

      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      defaults:
        run:
          working-directory: services/main

      steps:
        - name: ⬇️ Checkout repo
          uses: actions/checkout@v4

        - name: 🎈 Setup Fly
          uses: superfly/flyctl-actions/setup-flyctl@master

        - name: 🚀 Deploy Staging
          run:
            flyctl deploy --config fly.staging.toml --remote-only --build-arg COMMIT_SHA=${{ github.sha }}