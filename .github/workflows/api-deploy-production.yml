# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/
name: Deploy API Production

on:
  push:
    paths:
        - 'services/main/**'
    branches:
      - prod

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      db: ${{ steps.filter.outputs.db }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            db:
              - 'services/main/init/**'
  
  sync-db:
    name: üóÑÔ∏è Synchronize Database
    runs-on: ubuntu-latest
    concurrency: db-sync-group
    needs: changes
    if: ${{ needs.changes.outputs.db == 'true' }}
    defaults:
      run:
        working-directory: services/main
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: services/main/go.mod
          cache: true
      - run: go mod download
      - name: üóÑÔ∏è Run database sync
        env:
          DB_HOST: ${{ secrets.PROD_DB_HOST }}
          DB_USER: ${{ secrets.PROD_DB_USER }}
          DB_PASS: ${{ secrets.PROD_DB_PASS }}
          DB_NAME: ${{ secrets.PROD_DB_NAME }}
          DB_DEFAULT_DBNAME: ${{ secrets.PROD_DB_DEFAULT_DBNAME }}
          DB_PORT: ${{ secrets.PROD_DB_PORT }}
          DB_SSLMODE: ${{ secrets.PROD_DB_SSLMODE }}
        run: make update-db

  deploy:
      name: ‚öôÔ∏è Build And Deploy Production
      runs-on: ubuntu-latest
      concurrency: deploy-group
      needs: sync-db # ‚¨ÖÔ∏è Wait until the DB sync job finishes successfully

      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_PRODUCTION }}

      defaults:
        run:
          working-directory: services/main

      steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üéà Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: üöÄ Deploy Staging
        run:
          flyctl deploy --config fly.production.toml --remote-only --build-arg COMMIT_SHA=${{ github.sha }}